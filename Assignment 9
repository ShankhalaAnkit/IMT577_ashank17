---------------------------------------------------------------
-- VIEW 1 FOR QUESION 1.1 STORE PERFORMANCE
---------------------------------------------------------------

CREATE OR REPLACE SECURE VIEW  VIEW_STORE_PERFORMANCE
AS
SELECT A.STORENUMBER,A.DAY_NAME,A.MONTH_NUM_IN_YEAR,A.MONTH_NAME,A.YEAR,A.SALES_TARGET_AMOUNT,B.SALEAMOUNT
FROM
(SELECT DS.STORENUMBER,DD.DAY_NAME,DD.MONTH_NUM_IN_YEAR,DD.MONTH_NAME,DD.YEAR,ROUND(SUM(FSSA.SALESTARGETAMOUNT),0) AS SALES_TARGET_AMOUNT
FROM VIEW_FACT_SRCSALESTARGET FSSA
INNER JOIN VIEW_DIM_STORE DS
ON DS.DIMSTOREID = FSSA.DIMSTOREID
INNER JOIN 
VIEW_DIM_DATE DD
ON DD.DATE_PKEY = FSSA.DIMTARGETDATEID
GROUP BY 1,2,3,4,5
ORDER BY 2) AS A
INNER JOIN 
(SELECT DS.STORENUMBER,DD.DAY_NAME,DD.MONTH_NUM_IN_YEAR,DD.MONTH_NAME,DD.YEAR,ROUND(SUM(FSA.SALEAMOUNT),0) AS SALEAMOUNT
FROM VIEW_FACT_SALESACTUAL FSA
INNER JOIN VIEW_DIM_STORE DS
ON DS.DIMSTOREID = FSA.DIMSTOREID
INNER JOIN 
VIEW_DIM_DATE DD
ON DD.DATE_PKEY = FSA.DIMSALEDATEID
GROUP BY 1,2,3,4,5
ORDER BY 2) AS B 
ON A.STORENUMBER=B.STORENUMBER AND A.MONTH_NUM_IN_YEAR=B.MONTH_NUM_IN_YEAR AND A.MONTH_NAME=B.MONTH_NAME AND A.YEAR=B.YEAR and A.DAY_NAME = B.DAY_NAME
ORDER BY 1,2,4;

---------------------------------------------------------------
-- VIEW 2 FOR QUESION 1.3 -> PRODUCT SALE QTY PERFORMANCE
---------------------------------------------------------------

CREATE OR REPLACE SECURE VIEW VIEW_PRODUCT_PERFORMANCE
AS
SELECT DP.SOURCEPRODUCTID AS PRODUCTID,DP.PRODUCTNAME AS PRODUCTNAME,DP.PRODUCTTYPE AS PRODUCTTYPE,DP.PRODUCTCATEGORY AS PRODUCTCATEGORY
,A.DIMSALEdateid,VDD.DAY_NAME,VDD.WEEK_NUM_IN_YEAR,VDD.MONTH_NAME, VDD.YEAR,A.ACTUAL_PROD_SALE,A.DIMSTOREID, 
ROUND(VPFS.PRODUCTTARGETARGETSALESQUANTITY,0) AS PRODUCT_SALE_QTY_TARGET
FROM (SELECT DIMPRODUCTID,DIMSTOREID,DIMSALEdateid,ROUND(SUM(SALEQUANTITY),0) as ACTUAL_PROD_SALE FROM VIEW_FACT_SALESACTUAL WHERE DIMSTOREID IN (4,6)
GROUP BY 1,2,3) AS A
INNER JOIN 
VIEW_FACT_PRODUCTSALESTARGET VPFS 
ON VPFS.DIMPRODUCTID = A.DIMPRODUCTID AND A.DIMSALEDATEID = VPFS.DIMTARGETDATEID
INNER JOIN DIM_PRODUCT DP
ON DP.DIMPRODUCTID=A.DIMPRODUCTID
INNER JOIN 
VIEW_DIM_DATE AS VDD
ON VDD.DATE_PKEY = A.DIMSALEdateid;


---------------------------------------------------------------
-- VIEW 1 FOR QUESION 2 STORE BONUS
---------------------------------------------------------------

CREATE OR REPLACE SECURE VIEW Bonus_Amount 
AS
with basedata as 
(select ds.StoreNumber, dd.YEAR, sum(fsa.SaleTotalProfit) as TotalProfit, sum(fsa.SaleAmount) as TotalSales, sum(fsa.SaleQuantity) as TotalQuantity
from Fact_SalesActual fsa 
join Dim_Date dd on fsa.DimSaleDateID = dd.DATE_PKEY
join view_Dim_Store ds on fsa.DimStoreID = ds.DimStoreID
where dd.YEAR = 2013
group by ds.storenumber, dd.YEAR) 
select basedata.StoreNumber,basedata.YEAR,basedata.TotalSales,2000000*(basedata.TotalSales)/(select sum(fsa.SaleAmount) from Fact_SalesActual fsa join Dim_Date dd on fsa.DimSaleDateID = dd.Date_Pkey join dim_store ds on ds.dimstoreid = fsa.dimstoreid  where dd."YEAR" = 2013 and fsa.dimstoreid not in (-1)) as BonusAmount
,(basedata.TotalSales)/(select sum(fsa.SaleAmount) from Fact_SalesActual fsa join Dim_Date dd on fsa.DimSaleDateID = dd.Date_Pkey join dim_store ds on ds.dimstoreid = fsa.dimstoreid  where dd."YEAR" = 2013 and fsa.dimstoreid not in (-1))*100 as RevenuePercent
from basedata;


---------------------------------------------------------------
-- VIEW 1 FOR QUESION 4 NEW STORES OPEN
---------------------------------------------------------------

CREATE OR REPLACE SECURE VIEW VIEW_LOCATION 
AS
SELECT VDS.STORENUMBER,VDL.DIMLOCATIONID,VDD.YEAR, VDL.POSTALCODE, VDL.ADDRESS, VDL.CITY, VDL.REGION, VDL.COUNTRY, SUM(VFSA.SALEAMOUNT) "TOTAL REVENUE",
SUM(VFSA.SALETOTALPROFIT) "TOTAL PROFIT"  FROM VIEW_DIM_LOCATION VDL
INNER JOIN VIEW_FACT_SALESACTUAL VFSA
ON VDL.DIMLOCATIONID = VFSA.DIMLOCATIONID
INNER JOIN VIEW_DIM_STORE VDS
ON VDS.DIMSTOREID = VFSA.DIMSTOREID
INNER JOIN VIEW_DIM_DATE VDD
ON VDD.DATE_PKEY = VFSA.DIMSALEDATEID
GROUP BY (1,2,3,4,5,6,7,8);
